root: { stdenv, fetchurl, fetchzip, elixir, python3Packages, rebar, rebar3 }:

with stdenv.lib;

let
  binwalk = python3Packages.binwalk.override {
    pyqtgraph = null;
  };

  hex = fetchurl {
    url = "https://repo.hex.pm/installs/1.6.0/hex-0.18.1.ez";
    sha512 = "9c806664a3341930df4528be38b0da216a31994830c4437246555fe3027c047e073415bcb1b6557a28549e12b0c986142f5e3485825a66033f67302e87520119";
  };

  fetchHex = { pname, version, sha256 }: stdenv.mkDerivation {
    name = "hex-${pname}-${version}";

    src = fetchurl {
      url = "https://repo.hex.pm/tarballs/${pname}-${version}.tar";
      name = "${pname}-${version}.mix";
      inherit sha256;

      postFetch = ''
        tar -xf $downloadedFile
        cat VERSION metadata.config contents.tar.gz > $out
      '';
    };

    nativeBuildInputs = [ binwalk ];

    unpackPhase = ''
      HOME=. binwalk --extract $src
    '';

    installPhase = ''
      mkdir $out
      echo ${pname},${version},${sha256},hexpm > $out/.hex
      tar xf *.extracted/* -C $out
    '';
  };

  closure = {
<%= closure %>
  };

  # Deep link deps so mix can write build files in the dep dirs, then fool mix
  # to think any git deps are checked out.
  linkDependency = name: src: ''
    cp -rs --no-preserve=mode ${src} deps/${name}
    mkdir deps/${name}/.git
    touch deps/${name}/.git/HEAD
  '';
in

stdenv.mkDerivation {
  name = "mix-project";
  src = root;

  buildInputs = [ elixir rebar rebar3 ];

  configurePhase = ''
    runHook preConfigure

    mkdir deps
    ${concatStringsSep "\n" (mapAttrsToList linkDependency closure)}

    runHook postConfigure
  '';

  HOME = ".";

  MIX_ENV = "prod";
  MIX_REBAR = "${rebar}/bin/rebar";
  MIX_REBAR3 = "${rebar3}/bin/rebar3";

  buildPhase = ''
    runHook preBuild

    mix archive.install --force ${hex}
    mix deps.compile --force
    mix compile --no-deps-check

    runHook postBuild
  '';

  installPhase = ''
    runHook preInstall

    mkdir $out
    mv * .mix $out

    runHook postInstall
  '';
}
